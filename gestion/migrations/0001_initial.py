# Generated by Django 5.2.4 on 2025-08-07 00:06

import django.contrib.auth.models
import django.contrib.auth.validators
import django.core.validators
import django.db.models.deletion
import django.utils.timezone
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Avion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('modelo', models.CharField(max_length=100)),
                ('capacidad', models.IntegerField(validators=[django.core.validators.MinValueValidator(1)])),
                ('filas', models.IntegerField(validators=[django.core.validators.MinValueValidator(1)])),
                ('matricula', models.CharField(default='TEMP123', max_length=10, unique=True)),
                ('columnas', models.IntegerField(validators=[django.core.validators.MinValueValidator(1)])),
                ('fecha_fabricacion', models.DateField(default=django.utils.timezone.now)),
                ('ultimo_mantenimiento', models.DateField(default=django.utils.timezone.now)),
            ],
            options={
                'verbose_name_plural': 'Aviones',
                'ordering': ['modelo'],
            },
        ),
        migrations.CreateModel(
            name='Pasajero',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(max_length=100)),
                ('apellido', models.CharField(max_length=100)),
                ('tipo_documento', models.CharField(max_length=10)),
                ('documento', models.CharField(max_length=20)),
                ('fecha_nacimiento', models.DateField()),
            ],
        ),
        migrations.CreateModel(
            name='Asiento',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('numero', models.CharField(max_length=10)),
                ('fila', models.IntegerField()),
                ('columna', models.CharField(max_length=5)),
                ('tipo', models.CharField(choices=[('economy', 'Economy'), ('premium', 'Premium'), ('business', 'Business'), ('first', 'First Class')], default='economy', max_length=20)),
                ('estado', models.CharField(choices=[('disponible', 'Disponible'), ('reservado', 'Reservado'), ('ocupado', 'Ocupado'), ('mantenimiento', 'En Mantenimiento')], default='disponible', max_length=20)),
                ('precio_extra', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('avion', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='asientos', to='gestion.avion')),
            ],
            options={
                'ordering': ['fila', 'columna'],
                'unique_together': {('avion', 'numero')},
            },
        ),
        migrations.CreateModel(
            name='Reserva',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('estado', models.CharField(choices=[('pendiente', 'Pendiente'), ('confirmada', 'Confirmada'), ('cancelada', 'Cancelada'), ('checkin', 'Check-In Realizado')], default='pendiente', max_length=20)),
                ('fecha_reserva', models.DateTimeField(auto_now_add=True)),
                ('precio_final', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('fecha_modificacion', models.DateTimeField(auto_now=True)),
                ('codigo_reserva', models.CharField(editable=False, max_length=12, unique=True)),
                ('equipaje_mano', models.BooleanField(default=True)),
                ('equipaje_bodega', models.PositiveIntegerField(default=0)),
                ('requerimientos_especiales', models.TextField(blank=True)),
                ('asiento', models.OneToOneField(on_delete=django.db.models.deletion.PROTECT, related_name='reserva', to='gestion.asiento')),
            ],
            options={
                'ordering': ['-fecha_reserva'],
            },
        ),
        migrations.CreateModel(
            name='Boleto',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('codigo_barra', models.CharField(editable=False, max_length=30, unique=True)),
                ('fecha_emision', models.DateTimeField(auto_now_add=True)),
                ('fecha_checkin', models.DateTimeField(blank=True, null=True)),
                ('estado', models.CharField(choices=[('activo', 'Activo'), ('usado', 'Usado'), ('anulado', 'Anulado')], default='activo', max_length=20)),
                ('puerta_embarque', models.CharField(blank=True, max_length=5)),
                ('asiento_alternativo', models.CharField(blank=True, max_length=10)),
                ('reserva', models.OneToOneField(on_delete=django.db.models.deletion.PROTECT, related_name='boleto', to='gestion.reserva')),
            ],
            options={
                'ordering': ['-fecha_emision'],
            },
        ),
        migrations.CreateModel(
            name='Usuario',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('documento', models.CharField(max_length=20, unique=True, validators=[django.core.validators.RegexValidator('^[0-9]+$', 'Solo se permiten números')])),
                ('telefono', models.CharField(max_length=20, validators=[django.core.validators.RegexValidator('^\\+?[0-9]+$', 'Formato de teléfono inválido')])),
                ('fecha_nacimiento', models.DateField(blank=True, null=True)),
                ('rol', models.CharField(choices=[('AD', 'Administrador'), ('EM', 'Empleado'), ('PA', 'Pasajero')], default='PA', max_length=2)),
                ('groups', models.ManyToManyField(blank=True, help_text='Grupos a los que pertenece el usuario.', related_name='gestion_usuarios', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Permisos específicos para el usuario.', related_name='gestion_usuarios_permissions', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.AddField(
            model_name='reserva',
            name='pasajero',
            field=models.ForeignKey(limit_choices_to={'rol': 'PA'}, on_delete=django.db.models.deletion.PROTECT, related_name='reservas', to='gestion.usuario'),
        ),
        migrations.CreateModel(
            name='Vuelo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('codigo_vuelo', models.CharField(max_length=10, unique=True)),
                ('origen', models.CharField(max_length=100)),
                ('destino', models.CharField(max_length=100)),
                ('fecha_salida', models.DateTimeField()),
                ('fecha_llegada', models.DateTimeField()),
                ('duracion', models.DurationField()),
                ('estado', models.CharField(choices=[('programado', 'Programado'), ('demorado', 'Demorado'), ('cancelado', 'Cancelado'), ('completado', 'Completado'), ('en_curso', 'En Curso')], default='programado', max_length=20)),
                ('precio_base', models.DecimalField(decimal_places=2, max_digits=10, validators=[django.core.validators.MinValueValidator(0)])),
                ('avion', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='vuelos', to='gestion.avion')),
                ('tripulacion', models.ManyToManyField(blank=True, limit_choices_to={'rol__in': ['AD', 'EM']}, to='gestion.usuario')),
            ],
            options={
                'ordering': ['fecha_salida'],
            },
        ),
        migrations.AddField(
            model_name='reserva',
            name='vuelo',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='reservas', to='gestion.vuelo'),
        ),
        migrations.AddIndex(
            model_name='vuelo',
            index=models.Index(fields=['origen', 'destino'], name='gestion_vue_origen_25a1c9_idx'),
        ),
        migrations.AddIndex(
            model_name='vuelo',
            index=models.Index(fields=['fecha_salida'], name='gestion_vue_fecha_s_3f8d62_idx'),
        ),
        migrations.AddConstraint(
            model_name='reserva',
            constraint=models.UniqueConstraint(fields=('pasajero', 'vuelo'), name='reserva_unica_por_pasajero_y_vuelo'),
        ),
        migrations.AddConstraint(
            model_name='reserva',
            constraint=models.CheckConstraint(condition=models.Q(('precio_final__gte', 0)), name='precio_final_positivo'),
        ),
    ]
